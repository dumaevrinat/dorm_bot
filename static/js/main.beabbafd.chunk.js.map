{"version":3,"sources":["slices/commandsSlice.js","api/index.js","store/index.js","Components/Pages/HomePage.jsx","context.js","Components/NavDrawer/index.jsx","Components/Header/index.jsx","Components/Pages/BotSettingsPage.jsx","Components/Command/index.jsx","Components/Pages/CommandSettingsPage.jsx","Components/Pages/KeyboardSettingsPage.jsx","Components/Pages/StatisticsPage.jsx","Components/App/index.jsx","serviceWorker.js","index.js"],"names":["fetchCommands","createAsyncThunk","a","axios","get","response","data","commandsSlice","createSlice","name","initialState","commands","status","error","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","message","selectAllCommands","actions","combineReducers","createStore","applyMiddleware","thunk","useStyles","makeStyles","theme","root","display","flexDirection","HomePage","classes","className","Typography","variant","Context","React","createContext","height","list","width","pages","title","path","NavDrawer","open","history","useHistory","toggleDrawer","useContext","Drawer","anchor","onClose","Toolbar","List","map","page","ListItem","button","onClick","pagePath","push","ListItemText","primary","menuButton","marginRight","spacing","menu","marginLeft","Header","AppBar","color","position","elevation","IconButton","edge","AccountCircle","maxWidth","BotSettingsPage","padding","marginTop","marginBottom","header","alignItems","content","paddingLeft","paddingRight","contentSubtitle","synonyms","flexWrap","margin","overflow","responseText","whiteSpace","active","expand","transform","transition","transitions","create","duration","shortest","expandOpen","Command","mainName","isActive","priority","responses","useState","expanded","setExpanded","Card","Switch","checked","onChange","event","console","log","target","clsx","Collapse","in","CardContent","synonym","Chip","label","index","length","Divider","CardActions","Button","info","CommandSettingsPage","dispatch","useDispatch","useSelector","commandsStatus","useEffect","CircularProgress","command","KeyboardSettingsPage","StatisticsPage","customTheme","createMuiTheme","palette","main","light","dark","secondary","background","typography","fontFamily","join","paddingTop","App","isOpenDrawer","setIsOpenDrawer","store","ThemeProvider","responsiveFontSizes","Provider","value","Container","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.beabbafd.chunk.js","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport {getCommands} from \"../api\"\n\n\nexport const fetchCommands = createAsyncThunk('commands/fetchCommands', async () => {\n    const response = await getCommands()\n\n    return response.data\n})\n\nconst initialState = {\n    commands: [],\n    status: 'idle',\n    error: null\n}\n\nconst commandsSlice = createSlice({\n    name: 'commands',\n    initialState: initialState,\n    reducers: {},\n    extraReducers: {\n        [fetchCommands.pending]: (state, action) => {\n            state.status = 'loading'\n        },\n        [fetchCommands.fulfilled]: (state, action) => {\n            state.status = 'succeeded'\n            state.commands = action.payload\n        },\n        [fetchCommands.rejected]: (state, action) => {\n            state.status = 'failed'\n            state.error = action.error.message\n        }\n    }\n})\n\nexport const selectAllCommands = (state) => state.commands.commands\n\nexport const {} = commandsSlice.actions\n\nexport default commandsSlice.reducer","import axios from 'axios'\n\nexport const getCommands = () => {\n    return axios.get('https://5fb057bb7edddb0016468450.mockapi.io/commands')\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport commands from '../slices/commandsSlice'\n\nconst reducers = combineReducers({commands})\n\nexport default createStore(reducers, applyMiddleware(thunk))\n\n\n// https://github.com/zalmoxisus/redux-devtools-extension\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n// export default createStore(reducers, composeEnhancers(applyMiddleware(thunk)))","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}))\n\nexport default function HomePage() {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h6'>\n                Home page\n            </Typography>\n        </div>\n    )\n}\n","import React from 'react'\n\nconst Context = React.createContext()\n\nexport default Context\n","import React, {useContext} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Context from \"../../context\"\nimport {useHistory} from \"react-router-dom\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Typography from \"@material-ui/core/Typography\";\nimport {Toolbar} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%',\n    },\n    list: {\n        width: 250,\n    }\n}))\n\nconst pages = [\n    {\n        title: 'Главная',\n        path: ''\n    },\n    {\n        title: 'Настройки бота',\n        path: 'bot_settings'\n    },\n    {\n        title: 'Настройки команд',\n        path: 'command_settings'\n    },\n    {\n        title: 'Настройки клавиатуры',\n        path: 'keyboard_settings'\n    },\n    {\n        title: 'Статистика',\n        path: 'statistics'\n    }\n]\n\nexport default function NavDrawer({open}) {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const {toggleDrawer} = useContext(Context)\n\n    const goPage = (pagePath) => {\n        history.push(`/${pagePath}`)\n        toggleDrawer()\n    }\n\n    return (\n        <Drawer\n            anchor='left'\n            open={open}\n            onClose={() => toggleDrawer()}\n        >\n            <Toolbar>\n                <Typography variant=\"h6\">\n                    Dorm bot\n                </Typography>\n            </Toolbar>\n            <List className={classes.list}>\n                {pages.map(page =>\n                    <ListItem\n                        button\n                        key={page.path}\n                        onClick={() => goPage(page.path)}>\n                        <ListItemText primary={page.title}/>\n                    </ListItem>\n                )}\n            </List>\n        </Drawer>\n    )\n}\n","import React, {useContext} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Context from \"../../context\"\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {AccountCircle} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n    },\n    menu: {\n        marginLeft: 'auto'\n    }\n}))\n\nexport default function Header() {\n    const classes = useStyles()\n\n    const {toggleDrawer} = useContext(Context)\n\n    return (\n        <AppBar color='inherit' position=\"fixed\" elevation={0}>\n            <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" onClick={() => toggleDrawer()}>\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    Dorm bot\n                </Typography>\n\n                <div className={classes.menu}>\n                        <IconButton\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}))\n\nexport default function BotSettingsPage() {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h6'>\n                BotSettingsPage\n            </Typography>\n        </div>\n    )\n}\n","import React, {useState} from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {CardContent, Divider, Typography} from \"@material-ui/core\"\nimport Card from \"@material-ui/core/Card\"\nimport Switch from \"@material-ui/core/Switch\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Chip from \"@material-ui/core/Chip\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Collapse from \"@material-ui/core/Collapse\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    },\n    header: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    title: {\n        marginRight: theme.spacing(1)\n    },\n    content: {\n        paddingLeft: 0,\n        paddingRight: 0,\n    },\n    contentSubtitle: {\n        marginTop: theme.spacing(2)\n    },\n    actions: {\n        paddingLeft: 0,\n        paddingRight: 0,\n    },\n    synonyms: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    response: {\n        display: 'flex',\n        overflow: 'auto',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1)\n    },\n    responseText: {\n        whiteSpace: 'pre-line'\n    },\n    active: {\n        marginRight: theme.spacing(2)\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n}))\n\nexport default function Command({mainName, isActive, priority, synonyms, responses}) {\n    const classes = useStyles()\n\n    const [expanded, setExpanded] = useState(false)\n\n    const changeActive = (event) => {\n        //!\n        console.log(event.target.checked)\n    }\n\n    return (\n        <Card variant=\"outlined\" className={classes.root}>\n            <div className={classes.header}>\n                <Switch\n                    color='primary'\n                    className={classes.active}\n                    checked={isActive}\n                    onChange={changeActive}\n                />\n                <Typography className={classes.title} variant='h6'>\n                    {mainName}\n                </Typography>\n                <Typography color='textSecondary' variant=\"subtitle2\">\n                    {priority}\n                </Typography>\n                <IconButton\n                    className={clsx(classes.expand, {\n                        [classes.expandOpen]: expanded,\n                    })}\n                    onClick={() => setExpanded(!expanded)}\n                >\n                    <ExpandMoreIcon />\n                </IconButton>\n            </div>\n\n            <Collapse in={expanded}>\n                <CardContent className={classes.content}>\n                    <Typography className={classes.contentSubtitle} variant=\"subtitle2\">\n                        Синонимы\n                    </Typography>\n                    <div className={classes.synonyms}>\n                        {synonyms.map(synonym =>\n                            <Chip label={synonym} key={synonym}/>\n                        )}\n                    </div>\n\n                    <Typography className={classes.contentSubtitle} variant=\"subtitle2\">\n                        Ответы\n                    </Typography>\n                    <List>\n                        {responses.map((response, index) =>\n                            <div key={response}>\n                                <ListItem className={classes.response}>\n                                    <Typography className={classes.responseText}>\n                                        {response}\n                                    </Typography>\n                                </ListItem>\n                                {index !== responses.length - 1 && <Divider/>}\n                            </div>\n                        )}\n                    </List>\n                </CardContent>\n            </Collapse>\n\n            <CardActions className={classes.actions}>\n                <Button\n                    // startIcon={<EditRounded/>}\n                >\n                    Редактировать\n                </Button>\n                <Button\n                    // startIcon={<DeleteOutlineRounded/>}\n                >\n                    Удалить\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}","import React, {useEffect} from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchCommands, selectAllCommands} from \"../../slices/commandsSlice\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Command from \"../Command\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        display: \"flex\",\n        flexDirection: 'column',\n    },\n    info: {\n        marginBottom: theme.spacing(4)\n    }\n}))\n\nexport default function CommandSettingsPage() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const commands = useSelector(selectAllCommands)\n    const commandsStatus = useSelector(state => state.commands.status)\n\n    useEffect(() => {\n        if (commandsStatus === 'idle') {\n            dispatch(fetchCommands())\n        }\n    }, [commandsStatus, dispatch])\n\n    return (\n        <div className={classes.root}>\n            <Typography className={classes.info}>\n                На этой странице можно создать новые команды для бота, настроить уже существующие.\n            </Typography>\n\n            {commandsStatus === 'loading' && <CircularProgress/>}\n            {commandsStatus === 'succeeded' && commands.map(command =>\n                <Command\n                    mainName={command.mainName}\n                    isActive={command.isActive}\n                    priority={command.priority}\n                    synonyms={command.synonyms}\n                    responses={command.responses}\n                />\n            )}\n        </div>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}))\n\nexport default function KeyboardSettingsPage() {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h6'>\n                KeyboardSettingsPage\n            </Typography>\n        </div>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}))\n\nexport default function StatisticsPage() {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h6'>\n                StatisticsPage\n            </Typography>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport store from \"../../store\"\nimport {Provider} from 'react-redux'\nimport {HashRouter, Route, Switch} from \"react-router-dom\"\nimport {Container, createMuiTheme, responsiveFontSizes} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {ThemeProvider} from \"@material-ui/styles\"\nimport HomePage from \"../Pages/HomePage\"\nimport Context from \"../../context\"\nimport NavDrawer from \"../NavDrawer\"\nimport Header from \"../Header\";\nimport BotSettingsPage from \"../Pages/BotSettingsPage\";\nimport CommandSettingsPage from \"../Pages/CommandSettingsPage\";\nimport KeyboardSettingsPage from \"../Pages/KeyboardSettingsPage\";\nimport StatisticsPage from \"../Pages/StatisticsPage\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst customTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#304ffe',\n            light: '#7b7cff',\n            dark: '#0026ca'\n        },\n        secondary: {\n            main: '#1de9b6',\n            light: '#1de9b6',\n            dark: '#00b686'\n        },\n        background: {\n            light: '#f1f3f4'\n        }\n    },\n    typography: {\n        fontFamily: [\n            'Roboto',\n            'Helvetica',\n            'Arial',\n            'sans-serif',\n        ].join(','),\n    },\n})\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        paddingTop: theme.spacing(4),\n    }\n}))\n\nexport default function App() {\n    const classes = useStyles()\n\n    const [isOpenDrawer, setIsOpenDrawer] = useState(false)\n\n    const toggleDrawer = () => {\n        setIsOpenDrawer(!isOpenDrawer)\n    }\n\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={responsiveFontSizes(customTheme)}>\n                <Context.Provider value={{toggleDrawer}}>\n                    <HashRouter>\n                        <Header/>\n                        <Toolbar/>\n\n                        <NavDrawer open={isOpenDrawer}/>\n\n                        <Container maxWidth=\"md\" className={classes.content}>\n                            <Switch>\n                                <Route path='/' exact component={HomePage}/>\n                                <Route path='/bot_settings' component={BotSettingsPage}/>\n                                <Route path='/command_settings' component={CommandSettingsPage}/>\n                                <Route path='/keyboard_settings' component={KeyboardSettingsPage}/>\n                                <Route path='/statistics' component={StatisticsPage}/>\n                            </Switch>\n                        </Container>\n                    </HashRouter>\n                </Context.Provider>\n            </ThemeProvider>\n        </Provider>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}