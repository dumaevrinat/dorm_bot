{"version":3,"sources":["Components/Pages/HomePage.jsx","context.js","Components/NavDrawer/index.jsx","api/index.js","slices/authSlice.js","Components/UserPopover/index.jsx","Components/Header/index.jsx","Components/Pages/BotSettingsPage.jsx","slices/commandsSlice.js","Components/Command/index.jsx","Components/Pages/CommandSettingsPage.jsx","Components/Pages/KeyboardSettingsPage.jsx","Components/Pages/StatisticsPage.jsx","Components/Pages/LoginPage.jsx","Components/App/index.jsx","serviceWorker.js","store/index.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","alignItems","HomePage","classes","history","useHistory","className","Typography","variant","Button","color","disableElevation","onClick","push","Context","React","createContext","height","padding","spacing","drawerItem","borderRadius","paper","width","border","list","pages","title","icon","HomeOutlined","path","TuneRounded","ForumOutlined","KeyboardOutlined","TimelineRounded","DrawerItem","text","ListItem","button","ListItemIcon","ListItemText","primary","NavDrawer","open","toggleDrawer","useContext","Drawer","anchor","onClose","Toolbar","List","map","page","pagePath","setAuthorizationToken","token","axios","defaults","headers","common","login","username","password","post","fetchLogin","createAsyncThunk","a","response","data","authSlice","createSlice","name","initialState","user","isAuthenticated","status","error","reducers","logout","state","action","extraReducers","pending","fulfilled","payload","rejected","message","actions","userInfo","marginBottom","UserPopover","anchorEl","dispatch","useDispatch","useSelector","auth","Popover","Boolean","elevation","anchorOrigin","vertical","horizontal","transformOrigin","component","Box","fontWeight","menuButton","marginRight","menu","marginLeft","Header","useState","setAnchorEl","AppBar","position","IconButton","edge","event","currentTarget","AccountCircle","maxWidth","BotSettingsPage","fetchCommands","get","commandsSlice","commands","selectAllCommands","marginTop","header","content","paddingLeft","paddingRight","contentSubtitle","synonyms","flexWrap","margin","overflow","responseText","whiteSpace","active","expand","transform","transition","transitions","create","duration","shortest","expandOpen","Command","mainName","isActive","priority","responses","expanded","setExpanded","Card","Switch","checked","onChange","console","log","target","clsx","Collapse","in","CardContent","synonym","Chip","label","id","index","length","Divider","CardActions","info","CommandSettingsPage","commandsStatus","useEffect","CircularProgress","command","commandSynonyms","commandResponses","KeyboardSettingsPage","StatisticsPage","card","input","LoginPage","setUsername","setPassword","Grow","Paper","TextField","value","fullWidth","disabled","handleLogin","customTheme","createMuiTheme","palette","main","light","dark","secondary","background","typography","fontFamily","join","paddingTop","AppLayout","children","isOpenDrawer","setIsOpenDrawer","Provider","Container","DefaultLayout","App","ThemeProvider","responsiveFontSizes","render","match","exact","from","to","window","location","hostname","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":";0RAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,cAIL,SAASC,IACpB,IAAMC,EAAUR,IACVS,EAAUC,cAMhB,OACI,sBAAKC,UAAWH,EAAQL,KAAxB,UACI,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAApB,wDAIA,cAACC,EAAA,EAAD,CACID,QAAQ,YACRE,MAAM,UACNC,kBAAgB,EAChBC,QAdI,WACZR,EAAQS,KAAK,WAST,iGC1BZ,IAEeC,EAFCC,IAAMC,gB,mGCehBrB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFmB,OAAQ,OACRC,QAASrB,EAAMsB,QAAQ,EAAG,IAE9BC,WAAY,CACRC,aAAcxB,EAAMsB,QAAQ,EAAG,EAAG,EAAG,IAEzCG,MAAO,CACHC,MAAO,IACPC,OAAQ,QAEZC,KAAM,CACFP,QAASrB,EAAMsB,QAAQ,QAIzBO,EAAQ,CACV,CACIC,MAAO,6CACPC,KAAM,cAACC,EAAA,EAAD,IACNC,KAAM,KAEV,CACIH,MAAO,kFACPC,KAAM,cAACG,EAAA,EAAD,IACND,KAAM,qBAEV,CACIH,MAAO,8FACPC,KAAM,cAACI,EAAA,EAAD,IACNF,KAAM,yBAEV,CACIH,MAAO,sHACPC,KAAM,cAACK,EAAA,EAAD,IACNH,KAAM,0BAEV,CACIH,MAAO,+DACPC,KAAM,cAACM,EAAA,EAAD,IACNJ,KAAM,oBAId,SAASK,EAAT,GAA4C,IAAvBC,EAAsB,EAAtBA,KAAMR,EAAgB,EAAhBA,KAAMhB,EAAU,EAAVA,QACvBT,EAAUR,IAEhB,OACI,eAAC0C,EAAA,EAAD,CACIC,QAAM,EACNhC,UAAWH,EAAQiB,WACnBR,QAAS,kBAAMA,KAHnB,UAKI,cAAC2B,EAAA,EAAD,UAAeX,IACf,cAACY,EAAA,EAAD,CAAcC,QAASL,OAKpB,SAASM,EAAT,GAA4B,IAARC,EAAO,EAAPA,KACzBxC,EAAUR,IACVS,EAAUC,cAETuC,EAAgBC,qBAAW/B,GAA3B8B,aAOP,OACI,eAACE,EAAA,EAAD,CACIC,OAAO,OACPJ,KAAMA,EACNK,QAAS,kBAAMJ,KACfzC,QAAS,CACLmB,MAAOnB,EAAQmB,OALvB,UAQI,cAAC2B,EAAA,EAAD,UACI,cAAC1C,EAAA,EAAD,CAAYC,QAAQ,KAApB,wBAIJ,cAAC0C,EAAA,EAAD,CAAM5C,UAAWH,EAAQsB,KAAzB,SACKC,EAAMyB,KAAI,SAAAC,GAAI,OACX,cAACjB,EAAD,CAEIC,KAAMgB,EAAKzB,MACXf,QAAS,kBAxBbyC,EAwB0BD,EAAKtB,KAvB3C1B,EAAQS,KAAKwC,QACbT,IAFW,IAACS,GAyBIzB,KAAMwB,EAAKxB,MAHNwB,EAAKtB,c,sHCvGrBwB,EAAwB,SAACC,GAC9BA,EACAC,IAAMC,SAASC,QAAQC,OAAvB,+BAA2DJ,UAEpDC,IAAMC,SAASC,QAAQC,OAAvB,eAQFC,EAAQ,SAACC,EAAUC,GAC5B,OAAON,IAAMO,KAAK,4DAA6D,CAC3EF,SAAUA,EACVC,SAAUA,KCbLE,EAAaC,YACtB,aADsC,uCAEtC,iCAAAC,EAAA,6DAAQL,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAlB,SAC2BF,EAAMC,EAAUC,GAD3C,cACUK,EADV,yBAGW,CACHN,SAAUA,EACVN,MAAOY,EAASC,OALxB,2CAFsC,uDAmBpCC,GAAYC,YAAY,CAC1BC,KAAM,OACNC,aATiB,CACjBC,KAAM,KACNC,iBAAiB,EACjBC,OAAQ,OACRC,MAAO,MAMPC,SAAU,CACNC,OAAQ,SAACC,EAAOC,GACZ1B,EAAsB,MAEtByB,EAAML,iBAAkB,EACxBK,EAAMN,KAAO,OAGrBQ,eAAa,mBACRjB,EAAWkB,SAAU,SAACH,EAAOC,GAC1BD,EAAMJ,OAAS,aAFV,cAIRX,EAAWmB,WAAY,SAACJ,EAAOC,GAC5B1B,EAAsB0B,EAAOI,QAAQ7B,OAErCwB,EAAMJ,OAAS,YACfI,EAAMN,KAAOO,EAAOI,QACpBL,EAAML,iBAAkB,KATnB,cAWRV,EAAWqB,UAAW,SAACN,EAAOC,GAC3BD,EAAMJ,OAAS,SACfI,EAAMH,MAAQI,EAAOJ,MAAMU,WAbtB,KAkBHR,GAAUT,GAAUkB,QAApBT,OAECT,MAAf,Q,UC7CM1E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfkB,QAASrB,EAAMsB,QAAQ,IAE3BqE,SAAU,CACNC,aAAc5F,EAAMsB,QAAQ,QAIrB,SAASuE,GAAT,GAA2C,IAArBC,EAAoB,EAApBA,SAAU3C,EAAU,EAAVA,QACrC7C,EAAUR,KACViG,EAAWC,cAEXpB,EAAOqB,aAAY,SAAAf,GAAK,OAAIA,EAAMgB,KAAKtB,QAM7C,OACI,cAACuB,EAAA,EAAD,CACIrD,KAAMsD,QAAQN,GACdA,SAAUA,EACV3C,QAASA,EACTkD,UAAW,EACXC,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAXpB,SAcI,sBAAK/F,UAAWH,EAAQL,KAAxB,UACI,sBAAKQ,UAAWH,EAAQqF,SAAxB,UACI,cAACjF,EAAA,EAAD,CAAYC,QAAQ,QAAQE,MAAM,gBAAlC,2GAGA,cAACH,EAAA,EAAD,CAAYC,QAAQ,QAAQ+F,UAAU,OAAtC,SACI,cAACC,GAAA,EAAD,CAAKC,WAAW,mBAAhB,SACKhC,EAAKZ,gBAKlB,cAACpD,EAAA,EAAD,CAAQG,QAAS,WA9BzBgF,EAASd,OA8BD,iDC9ChB,IAAMnF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,GAGN4G,WAAY,CACRC,YAAa9G,EAAMsB,QAAQ,IAE/BQ,MAAO,GAEPiF,KAAM,CACFC,WAAY,YAIL,SAASC,KACpB,IAAM3G,EAAUR,KAETiD,EAAgBC,qBAAW/B,GAA3B8B,aAHsB,EAKGmE,mBAAS,MALZ,mBAKtBpB,EALsB,KAKZqB,EALY,KAe7B,OACI,cAACC,EAAA,EAAD,CAAQvG,MAAM,UAAUwG,SAAS,QAAQhB,UAAW,EAApD,SACI,eAACjD,EAAA,EAAD,WACI,cAACkE,EAAA,EAAD,CAAYC,KAAK,QAAQ9G,UAAWH,EAAQuG,WAAYhG,MAAM,UAAUE,QAAS,kBAAMgC,KAAvF,SACI,cAAC,IAAD,MAEJ,cAACrC,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWH,EAAQwB,MAA5C,sBAIA,qBAAKrB,UAAWH,EAAQyG,KAAxB,SACQ,cAACO,EAAA,EAAD,CACIzG,MAAM,UACNE,QArBE,SAACyG,GACvBL,EAAYK,EAAMC,gBAkBF,SAII,cAACC,EAAA,EAAD,QAIZ,cAAC7B,GAAD,CAAaC,SAAUA,EAAU3C,QAvBlB,WACvBgE,EAAY,cCjCpB,IAAMrH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF0H,SAAU,OACVzH,QAAS,OACTC,cAAe,cAIR,SAASyH,KACpB,IAAMtH,EAAUR,KAEhB,OACI,qBAAKW,UAAWH,EAAQL,KAAxB,SACI,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAApB,+B,iBCbCkH,GAAgBzD,YAAiB,yBAAD,sBAA2B,4BAAAC,EAAA,sELO7DV,IAAMmE,IAAI,2DKPmD,cAC9DxD,EAD8D,yBAG7DA,EAASC,MAHoD,4CAYlEwD,GAAgBtD,YAAY,CAC9BC,KAAM,WACNC,aARiB,CACjBqD,SAAU,GACVlD,OAAQ,OACRC,MAAO,MAMPC,SAAU,GACVI,eAAa,qBACRyC,GAAcxC,SAAU,SAACH,EAAOC,GAC7BD,EAAMJ,OAAS,aAFV,eAIR+C,GAAcvC,WAAY,SAACJ,EAAOC,GAC/BD,EAAMJ,OAAS,YACfI,EAAM8C,SAAW7C,EAAOI,WANnB,eAQRsC,GAAcrC,UAAW,SAACN,EAAOC,GAC9BD,EAAMJ,OAAS,SACfI,EAAMH,MAAQI,EAAOJ,MAAMU,WAVtB,MAeJwC,GAAoB,SAAC/C,GAAD,OAAWA,EAAM8C,SAASA,U,aAEzCD,GAAcrC,SAEjBqC,UAAf,Q,6GCxBMjI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFoB,QAASrB,EAAMsB,QAAQ,GACvB4G,UAAWlI,EAAMsB,QAAQ,GACzBsE,aAAc5F,EAAMsB,QAAQ,IAEhC6G,OAAQ,CACJjI,QAAS,OACTE,WAAY,UAEhB0B,MAAO,CACHgF,YAAa9G,EAAMsB,QAAQ,IAE/B8G,QAAS,CACLC,YAAa,EACbC,aAAc,GAElBC,gBAAiB,CACbL,UAAWlI,EAAMsB,QAAQ,IAE7BoE,QAAS,CACL2C,YAAa,EACbC,aAAc,GAElBE,SAAU,CACNtI,QAAS,OACTuI,SAAU,OACV,QAAS,CACLC,OAAQ1I,EAAMsB,QAAQ,KAG9BgD,SAAU,CACNpE,QAAS,OACTyI,SAAU,OACVN,YAAarI,EAAMsB,QAAQ,GAC3BgH,aAActI,EAAMsB,QAAQ,IAEhCsH,aAAc,CACVC,WAAY,YAEhBC,OAAQ,CACJhC,YAAa9G,EAAMsB,QAAQ,IAE/ByH,OAAQ,CACJC,UAAW,eACXhC,WAAY,OACZiC,WAAYjJ,EAAMkJ,YAAYC,OAAO,YAAa,CAC9CC,SAAUpJ,EAAMkJ,YAAYE,SAASC,YAG7CC,WAAY,CACRN,UAAW,sBAIJ,SAASO,GAAT,GAAuE,IAArDC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,SAAUlB,EAAsB,EAAtBA,SAAUmB,EAAY,EAAZA,UAC/DrJ,EAAUR,KADiE,EAGjDoH,oBAAS,GAHwC,mBAG1E0C,EAH0E,KAGhEC,EAHgE,KAUjF,OACI,eAACC,GAAA,EAAD,CAAMnJ,QAAQ,WAAWF,UAAWH,EAAQL,KAA5C,UACI,sBAAKQ,UAAWH,EAAQ6H,OAAxB,UACI,cAAC4B,GAAA,EAAD,CACIlJ,MAAM,UACNJ,UAAWH,EAAQwI,OACnBkB,QAASP,EACTQ,SAZK,SAACzC,GAElB0C,QAAQC,IAAI3C,EAAM4C,OAAOJ,YAYjB,cAACtJ,EAAA,EAAD,CAAYD,UAAWH,EAAQwB,MAAOnB,QAAQ,KAA9C,SACK6I,IAEL,cAAC9I,EAAA,EAAD,CAAYG,MAAM,gBAAgBF,QAAQ,YAA1C,SACK+I,IAEL,cAACpC,EAAA,EAAD,CACI7G,UAAW4J,aAAK/J,EAAQyI,OAAT,eACVzI,EAAQgJ,WAAaM,IAE1B7I,QAAS,kBAAM8I,GAAaD,IAJhC,SAMI,cAAC,KAAD,SAIR,cAACU,GAAA,EAAD,CAAUC,GAAIX,EAAd,SACI,eAACY,GAAA,EAAD,CAAa/J,UAAWH,EAAQ8H,QAAhC,UACI,cAAC1H,EAAA,EAAD,CAAYD,UAAWH,EAAQiI,gBAAiB5H,QAAQ,YAAxD,8DAGA,qBAAKF,UAAWH,EAAQkI,SAAxB,SACKA,EAASlF,KAAI,SAAAmH,GAAO,OACjB,cAACC,GAAA,EAAD,CAAMC,MAAOF,EAAQA,SAAcA,EAAQG,SAInD,cAAClK,EAAA,EAAD,CAAYD,UAAWH,EAAQiI,gBAAiB5H,QAAQ,YAAxD,kDAGA,cAAC0C,EAAA,EAAD,UACKsG,EAAUrG,KAAI,SAACgB,EAAUuG,GAAX,OACX,gCACI,cAACrI,EAAA,EAAD,CAAU/B,UAAWH,EAAQgE,SAA7B,SACI,cAAC5D,EAAA,EAAD,CAAYD,UAAWH,EAAQsI,aAA/B,SACKtE,EAASA,aAGjBuG,IAAUlB,EAAUmB,OAAS,GAAK,cAACC,GAAA,EAAD,MAN7BzG,EAASsG,cAanC,eAACI,GAAA,EAAD,CAAavK,UAAWH,EAAQoF,QAAhC,UACI,cAAC9E,EAAA,EAAD,6FAGA,cAACA,EAAA,EAAD,+DClIhB,IAAMd,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF0H,SAAU,OACVzH,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhB6K,KAAM,CACFrF,aAAc5F,EAAMsB,QAAQ,IAEhC0G,SAAU,CACNtG,MAAO,YAIA,SAASwJ,KACpB,IAAM5K,EAAUR,KACViG,EAAWC,cAEXgC,EAAW/B,YAAYgC,IACvBkD,EAAiBlF,aAAY,SAAAf,GAAK,OAAIA,EAAM8C,SAASlD,UAQ3D,OANAsG,qBAAU,WACiB,SAAnBD,GACApF,EAAS8B,QAEd,CAACsD,EAAgBpF,IAGhB,sBAAKtF,UAAWH,EAAQL,KAAxB,UACI,cAACS,EAAA,EAAD,CAAYD,UAAWH,EAAQ2K,KAA/B,ybAIoB,YAAnBE,GAAgC,cAACE,GAAA,EAAD,IAEjC,qBAAK5K,UAAWH,EAAQ0H,SAAxB,SACwB,cAAnBmD,GAAkCnD,EAAS1E,KAAI,SAAAgI,GAAO,OACnD,cAAC/B,GAAD,CAEIC,SAAU8B,EAAQ5G,KAClB+E,SAAU6B,EAAQ7B,SAClBC,SAAU4B,EAAQ5B,SAClBlB,SAAU8C,EAAQC,gBAClB5B,UAAW2B,EAAQE,kBALdF,EAAQV,YC3CrC,IAAM9K,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF0H,SAAU,OACVzH,QAAS,OACTC,cAAe,cAIR,SAASsL,KACpB,IAAMnL,EAAUR,KAEhB,OACI,qBAAKW,UAAWH,EAAQL,KAAxB,SACI,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAApB,oCCbZ,IAAMb,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF0H,SAAU,OACVzH,QAAS,OACTC,cAAe,cAIR,SAASuL,KACpB,IAAMpL,EAAUR,KAEhB,OACI,qBAAKW,UAAWH,EAAQL,KAAxB,SACI,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAApB,8B,iCCLNb,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACTC,cAAe,UAEnBwL,KAAM,CACFzL,QAAS,OACTC,cAAe,SACfC,WAAY,SACZiB,QAASrB,EAAMsB,QAAQ,IAE3BsK,MAAO,CACH1D,UAAWlI,EAAMsB,QAAQ,QAIlB,SAASuK,KACpB,IAAMvL,EAAUR,KACViG,EAAWC,cACXzF,EAAUC,cAHgB,EAKA0G,mBAAS,QALT,mBAKzBlD,EALyB,KAKf8H,EALe,OAMA5E,mBAAS,QANT,mBAMzBjD,EANyB,KAMf8H,EANe,KAQ1BjH,EAASmB,aAAY,SAAAf,GAAK,OAAIA,EAAMgB,KAAKpB,UACzCD,EAAkBoB,aAAY,SAAAf,GAAK,OAAIA,EAAMgB,KAAKrB,mBAC1CoB,aAAY,SAAAf,GAAK,OAAIA,EAAMgB,KAAKnB,SAY9C,OANAqG,qBAAU,WACFvG,GACAtE,EAAQS,KAAK,uBAElB,CAACT,EAASsE,IAGT,qBAAKpE,UAAWH,EAAQL,KAAxB,SACI,cAAC+L,GAAA,EAAD,CAAMzB,IAAE,EAAR,SACI,eAAC0B,GAAA,EAAD,CAAOtL,QAAQ,WAAWF,UAAWH,EAAQqL,KAA7C,UACI,cAACjL,EAAA,EAAD,CAAYC,QAAQ,KAApB,sCAIA,cAACuL,GAAA,EAAD,CACIzL,UAAWH,EAAQsL,MACnBhB,GAAG,WACHD,MAAM,8FACNwB,MAAOnI,EACPiG,SAAU,SAAAzC,GAAK,OAAIsE,EAAYtE,EAAM4C,OAAO+B,UAGhD,cAACD,GAAA,EAAD,CACIzL,UAAWH,EAAQsL,MACnBhB,GAAG,WACHD,MAAM,uCACNwB,MAAOlI,EACPgG,SAAU,SAAAzC,GAAK,OAAIuE,EAAYvE,EAAM4C,OAAO+B,UAGhD,cAACvL,EAAA,EAAD,CACIH,UAAWH,EAAQsL,MACnBQ,WAAS,EACTzL,QAAQ,YACRE,MAAM,UACNwL,SAAqB,YAAXvH,EACVhE,kBAAgB,EAChBC,QAAS,kBAzCT,SAACiD,EAAUC,GAC3B8B,EAAS5B,EAAW,CAACH,WAAUC,cAwCAqI,CAAYtI,EAAUC,IAPzC,mDCzDpB,IAAMsI,GAAcC,YAAe,CAC/BC,QAAS,CACL7J,QAAS,CACL8J,KAAM,UACNC,MAAO,UACPC,KAAM,WAEVC,UAAW,CACPH,KAAM,UACNC,MAAO,UACPC,KAAM,WAEVE,WAAY,CACRH,MAAO,YAGfI,WAAY,CACRC,WAAY,CACR,SACA,YACA,QACA,cACFC,KAAK,QAITnN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,GACNmI,QAAS,CACLlI,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ8M,WAAYlN,EAAMsB,QAAQ,QAIlC,SAAS6L,GAAT,GAAgC,IAAZC,EAAW,EAAXA,SACV9M,EAAUR,KADW,EAGaoH,oBAAS,GAHtB,mBAGpBmG,EAHoB,KAGNC,EAHM,KAS3B,OACI,8BACI,cAAC,EAAQC,SAAT,CAAkBpB,MAAO,CAACpJ,aANb,WACjBuK,GAAiBD,KAKb,SACI,gCACI,cAACpG,GAAD,IACA,cAAC7D,EAAA,EAAD,IAEA,cAACP,EAAD,CAAWC,KAAMuK,IAEjB,cAACG,EAAA,EAAD,CAAW7F,SAAS,KAAKlH,UAAWH,EAAQ8H,QAA5C,SACKgF,WAQzB,SAASK,GAAT,GAAoC,IAAZL,EAAW,EAAXA,SACd9M,EAAUR,KAEhB,OACI,8BACI,cAAC0N,EAAA,EAAD,CAAW7F,SAAS,KAAKlH,UAAWH,EAAQ8H,QAA5C,SACKgF,MAMF,SAASM,KAEpB,IAAM7I,EAAkBoB,aAAY,SAAAf,GAAK,OAAIA,EAAMgB,KAAKrB,mBAExD,OACI,cAAC8I,EAAA,EAAD,CAAe3N,MAAO4N,YAAoBrB,IAA1C,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOtK,KAAK,OAAO4L,OAAQ,gBAAU5L,EAAV,EAAE6L,MAAQ7L,KAAV,OACvB4C,EACI,cAACsI,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOlL,KAAI,UAAKA,EAAL,iBAA0B8L,OAAK,EAACrH,UAAWkB,KACtD,cAAC,IAAD,CAAO3F,KAAI,UAAKA,EAAL,qBAA8B8L,OAAK,EAACrH,UAAWwE,KAC1D,cAAC,IAAD,CAAOjJ,KAAI,UAAKA,EAAL,sBAA+B8L,OAAK,EAACrH,UAAW+E,KAC3D,cAAC,IAAD,CAAOxJ,KAAI,UAAKA,EAAL,eAAwB8L,OAAK,EAACrH,UAAWgF,KACpD,cAAC,IAAD,CAAUsC,KAAI,UAAK/L,EAAL,MAAegM,GAAG,WAIxC,cAAC,IAAD,CAAUA,GAAG,SAGrB,cAAC,IAAD,CAAOF,OAAK,EAAZ,SACI,cAACN,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOxL,KAAK,IAAI8L,OAAK,EAACrH,UAAWrG,IACjC,cAAC,IAAD,CAAO4B,KAAK,SAAS8L,OAAK,EAACrH,UAAWmF,KACtC,cAAC,IAAD,CAAUmC,KAAK,KAAKC,GAAG,aAKnC,cAAC,IAAD,CAAUD,KAAK,IAAIC,GAAG,aCjHtB7H,QACW,cAA7B8H,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASN,MACvB,2D,uBCbA9I,GAAWqJ,aAAgB,CAACrG,YAAU9B,UAE7BoI,gBAAYtJ,GAAUuJ,aAAgBC,OCCrDC,IAASZ,OACL,cAAC,IAAMa,WAAP,UACI,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACI,cAACjB,GAAD,QAGRkB,SAASC,eAAe,SFqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArK,GACLmF,QAAQnF,MAAMA,EAAMU,c","file":"static/js/main.7ac7c79a.chunk.js","sourcesContent":["import React from \"react\"\nimport {useHistory} from 'react-router-dom'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n}))\n\nexport default function HomePage() {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const goLogin = () => {\n        history.push('/login')\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h6'>\n                Главная\n            </Typography>\n\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                disableElevation\n                onClick={goLogin}\n            >\n                Войти в аккаунт\n            </Button>\n        </div>\n    )\n}\n","import React from 'react'\n\nconst Context = React.createContext()\n\nexport default Context\n","import React, {useContext} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Context from \"../../context\"\nimport {useHistory} from \"react-router-dom\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Typography from \"@material-ui/core/Typography\";\nimport {Toolbar} from \"@material-ui/core\";\nimport {\n    ForumOutlined, HomeOutlined,\n    KeyboardOutlined,\n    TimelineRounded, TuneRounded\n} from \"@material-ui/icons\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%',\n        padding: theme.spacing(0, 1)\n    },\n    drawerItem: {\n        borderRadius: theme.spacing(1, 1, 1, 1)\n    },\n    paper: {\n        width: 300,\n        border: 'none',\n    },\n    list: {\n        padding: theme.spacing(1)\n    }\n}))\n\nconst pages = [\n    {\n        title: 'Главная',\n        icon: <HomeOutlined/>,\n        path: '/'\n    },\n    {\n        title: 'Настройки бота',\n        icon: <TuneRounded/>,\n        path: '/app/bot_settings'\n    },\n    {\n        title: 'Настройки команд',\n        icon: <ForumOutlined/>,\n        path: '/app/command_settings'\n    },\n    {\n        title: 'Настройки клавиатуры',\n        icon: <KeyboardOutlined/>,\n        path: '/app/keyboard_settings'\n    },\n    {\n        title: 'Статистика',\n        icon: <TimelineRounded/>,\n        path: '/app/statistics'\n    }\n]\n\nfunction DrawerItem({text, icon, onClick}) {\n    const classes = useStyles()\n\n    return (\n        <ListItem\n            button\n            className={classes.drawerItem}\n            onClick={() => onClick()}\n        >\n            <ListItemIcon>{icon}</ListItemIcon>\n            <ListItemText primary={text}/>\n        </ListItem>\n    )\n}\n\nexport default function NavDrawer({open}) {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const {toggleDrawer} = useContext(Context)\n\n    const goPage = (pagePath) => {\n        history.push(pagePath)\n        toggleDrawer()\n    }\n\n    return (\n        <Drawer\n            anchor='left'\n            open={open}\n            onClose={() => toggleDrawer()}\n            classes={{\n                paper: classes.paper,\n            }}\n        >\n            <Toolbar>\n                <Typography variant=\"h6\">\n                    Dorm bot\n                </Typography>\n            </Toolbar>\n            <List className={classes.list}>\n                {pages.map(page =>\n                    <DrawerItem\n                        key={page.path}\n                        text={page.title}\n                        onClick={() => goPage(page.path)}\n                        icon={page.icon}\n                    />\n                )}\n            </List>\n        </Drawer>\n    )\n}\n","import axios from 'axios'\n\nexport const setAuthorizationToken = (token) => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    } else {\n        delete axios.defaults.headers.common['Authorization']\n    }\n}\n\nexport const getCommands = () => {\n    return axios.get('https://polytech-dorm-bot.herokuapp.com/api/v1/commands')\n}\n\nexport const login = (username, password) => {\n    return axios.post('https://polytech-dorm-bot.herokuapp.com/api/v1/auth/login', {\n        username: username,\n        password: password\n    })\n}\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport {login, setAuthorizationToken} from \"../api\";\n\n\nexport const fetchLogin = createAsyncThunk(\n    'auth/login',\n    async ({username, password}) => {\n        const response = await login(username, password)\n\n        return {\n            username: username,\n            token: response.data\n        }\n    }\n)\n\nconst initialState = {\n    user: null,\n    isAuthenticated: false,\n    status: 'idle',\n    error: null\n}\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: initialState,\n    reducers: {\n        logout: (state, action) => {\n            setAuthorizationToken(null)\n\n            state.isAuthenticated = false\n            state.user = null\n        }\n    },\n    extraReducers: {\n        [fetchLogin.pending]: (state, action) => {\n            state.status = 'loading'\n        },\n        [fetchLogin.fulfilled]: (state, action) => {\n            setAuthorizationToken(action.payload.token)\n\n            state.status = 'succeeded'\n            state.user = action.payload\n            state.isAuthenticated = true\n        },\n        [fetchLogin.rejected]: (state, action) => {\n            state.status = 'failed'\n            state.error = action.error.message\n        }\n    }\n})\n\nexport const {logout} = authSlice.actions\n\nexport default authSlice.reducer","import React, {useState} from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport {logout} from \"../../slices/authSlice\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(2),\n    },\n    userInfo: {\n        marginBottom: theme.spacing(2)\n    }\n}))\n\nexport default function UserPopover({anchorEl, onClose}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const user = useSelector(state => state.auth.user)\n\n    const handleLogout = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <Popover\n            open={Boolean(anchorEl)}\n            anchorEl={anchorEl}\n            onClose={onClose}\n            elevation={2}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <div className={classes.root}>\n                <div className={classes.userInfo}>\n                    <Typography variant='body1' color='textSecondary'>\n                        Выполнен вход как:\n                    </Typography>\n                    <Typography variant='body1' component='span'>\n                        <Box fontWeight=\"fontWeightMedium\">\n                            {user.username}\n                        </Box>\n                    </Typography>\n                </div>\n\n                <Button onClick={() => handleLogout()}>\n                    Выйти\n                </Button>\n            </div>\n        </Popover>\n    )\n}","import React, {useContext, useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Context from \"../../context\"\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {AccountCircle} from \"@material-ui/icons\";\nimport UserPopover from \"../UserPopover\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n    },\n    menu: {\n        marginLeft: 'auto'\n    }\n}))\n\nexport default function Header() {\n    const classes = useStyles()\n\n    const {toggleDrawer} = useContext(Context)\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleOpenPopover = (event) => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    const handleClosePopover = () => {\n        setAnchorEl(null)\n    }\n\n    return (\n        <AppBar color='inherit' position=\"fixed\" elevation={0}>\n            <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" onClick={() => toggleDrawer()}>\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    Dorm bot\n                </Typography>\n\n                <div className={classes.menu}>\n                        <IconButton\n                            color=\"inherit\"\n                            onClick={handleOpenPopover}\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                </div>\n\n                <UserPopover anchorEl={anchorEl} onClose={handleClosePopover} />\n            </Toolbar>\n        </AppBar>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}))\n\nexport default function BotSettingsPage() {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h6'>\n                BotSettingsPage\n            </Typography>\n        </div>\n    )\n}\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport {getCommands} from \"../api\"\n\n\nexport const fetchCommands = createAsyncThunk('commands/fetchCommands', async () => {\n    const response = await getCommands()\n\n    return response.data\n})\n\nconst initialState = {\n    commands: [],\n    status: 'idle',\n    error: null\n}\n\nconst commandsSlice = createSlice({\n    name: 'commands',\n    initialState: initialState,\n    reducers: {},\n    extraReducers: {\n        [fetchCommands.pending]: (state, action) => {\n            state.status = 'loading'\n        },\n        [fetchCommands.fulfilled]: (state, action) => {\n            state.status = 'succeeded'\n            state.commands = action.payload\n        },\n        [fetchCommands.rejected]: (state, action) => {\n            state.status = 'failed'\n            state.error = action.error.message\n        }\n    }\n})\n\nexport const selectAllCommands = (state) => state.commands.commands\n\nexport const {} = commandsSlice.actions\n\nexport default commandsSlice.reducer","import React, {useState} from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {CardContent, Divider, Typography} from \"@material-ui/core\"\nimport Card from \"@material-ui/core/Card\"\nimport Switch from \"@material-ui/core/Switch\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Chip from \"@material-ui/core/Chip\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Collapse from \"@material-ui/core/Collapse\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    },\n    header: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    title: {\n        marginRight: theme.spacing(1)\n    },\n    content: {\n        paddingLeft: 0,\n        paddingRight: 0,\n    },\n    contentSubtitle: {\n        marginTop: theme.spacing(2)\n    },\n    actions: {\n        paddingLeft: 0,\n        paddingRight: 0,\n    },\n    synonyms: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    response: {\n        display: 'flex',\n        overflow: 'auto',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1)\n    },\n    responseText: {\n        whiteSpace: 'pre-line'\n    },\n    active: {\n        marginRight: theme.spacing(2)\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n}))\n\nexport default function Command({mainName, isActive, priority, synonyms, responses}) {\n    const classes = useStyles()\n\n    const [expanded, setExpanded] = useState(false)\n\n    const changeActive = (event) => {\n        //!\n        console.log(event.target.checked)\n    }\n\n    return (\n        <Card variant=\"outlined\" className={classes.root}>\n            <div className={classes.header}>\n                <Switch\n                    color='primary'\n                    className={classes.active}\n                    checked={isActive}\n                    onChange={changeActive}\n                />\n                <Typography className={classes.title} variant='h6'>\n                    {mainName}\n                </Typography>\n                <Typography color='textSecondary' variant=\"subtitle2\">\n                    {priority}\n                </Typography>\n                <IconButton\n                    className={clsx(classes.expand, {\n                        [classes.expandOpen]: expanded,\n                    })}\n                    onClick={() => setExpanded(!expanded)}\n                >\n                    <ExpandMoreIcon />\n                </IconButton>\n            </div>\n\n            <Collapse in={expanded}>\n                <CardContent className={classes.content}>\n                    <Typography className={classes.contentSubtitle} variant=\"subtitle2\">\n                        Синонимы\n                    </Typography>\n                    <div className={classes.synonyms}>\n                        {synonyms.map(synonym =>\n                            <Chip label={synonym.synonym} key={synonym.id}/>\n                        )}\n                    </div>\n\n                    <Typography className={classes.contentSubtitle} variant=\"subtitle2\">\n                        Ответы\n                    </Typography>\n                    <List>\n                        {responses.map((response, index) =>\n                            <div key={response.id}>\n                                <ListItem className={classes.response}>\n                                    <Typography className={classes.responseText}>\n                                        {response.response}\n                                    </Typography>\n                                </ListItem>\n                                {index !== responses.length - 1 && <Divider/>}\n                            </div>\n                        )}\n                    </List>\n                </CardContent>\n            </Collapse>\n\n            <CardActions className={classes.actions}>\n                <Button>\n                    Редактировать\n                </Button>\n                <Button>\n                    Удалить\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}","import React, {useEffect} from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchCommands, selectAllCommands} from \"../../slices/commandsSlice\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Command from \"../Command\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        display: \"flex\",\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    info: {\n        marginBottom: theme.spacing(4)\n    },\n    commands: {\n        width: '100%'\n    }\n}))\n\nexport default function CommandSettingsPage() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const commands = useSelector(selectAllCommands)\n    const commandsStatus = useSelector(state => state.commands.status)\n\n    useEffect(() => {\n        if (commandsStatus === 'idle') {\n            dispatch(fetchCommands())\n        }\n    }, [commandsStatus, dispatch])\n\n    return (\n        <div className={classes.root}>\n            <Typography className={classes.info}>\n                На этой странице можно создать новые команды для бота, настроить уже существующие.\n            </Typography>\n\n            {commandsStatus === 'loading' && <CircularProgress/>}\n\n            <div className={classes.commands}>\n                {commandsStatus === 'succeeded' && commands.map(command =>\n                    <Command\n                        key={command.id}\n                        mainName={command.name}\n                        isActive={command.isActive}\n                        priority={command.priority}\n                        synonyms={command.commandSynonyms}\n                        responses={command.commandResponses}\n                    />\n                )}\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}))\n\nexport default function KeyboardSettingsPage() {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h6'>\n                KeyboardSettingsPage\n            </Typography>\n        </div>\n    )\n}\n","import React from \"react\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}))\n\nexport default function StatisticsPage() {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h6'>\n                StatisticsPage\n            </Typography>\n        </div>\n    )\n}\n","import React, {useEffect, useState} from \"react\"\nimport {useHistory} from 'react-router-dom'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {Typography} from \"@material-ui/core\"\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchLogin} from \"../../slices/authSlice\";\nimport {KeyboardArrowRightRounded} from \"@material-ui/icons\";\nimport Grow from \"@material-ui/core/Grow\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: theme.spacing(4)\n    },\n    input: {\n        marginTop: theme.spacing(4)\n    },\n}))\n\nexport default function LoginPage() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const [username, setUsername] = useState('user')\n    const [password, setPassword] = useState('user')\n\n    const status = useSelector(state => state.auth.status)\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\n    const error = useSelector(state => state.auth.error)\n\n    const handleLogin = (username, password) => {\n        dispatch(fetchLogin({username, password}))\n    }\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            history.push('/app/bot_settings')\n        }\n    }, [history, isAuthenticated])\n\n    return (\n        <div className={classes.root}>\n            <Grow in>\n                <Paper variant='outlined' className={classes.card}>\n                    <Typography variant='h6'>\n                        Вход\n                    </Typography>\n\n                    <TextField\n                        className={classes.input}\n                        id=\"username\"\n                        label=\"Имя пользователя\"\n                        value={username}\n                        onChange={event => setUsername(event.target.value)}\n                    />\n\n                    <TextField\n                        className={classes.input}\n                        id=\"password\"\n                        label=\"Пароль\"\n                        value={password}\n                        onChange={event => setPassword(event.target.value)}\n                    />\n\n                    <Button\n                        className={classes.input}\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={status === 'loading'}\n                        disableElevation\n                        onClick={() => handleLogin(username, password)}\n                    >\n                        Войти\n                    </Button>\n                </Paper>\n            </Grow>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport {useSelector} from 'react-redux'\nimport {Redirect, BrowserRouter, Route, Switch} from \"react-router-dom\"\nimport {Container, createMuiTheme, responsiveFontSizes} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport {ThemeProvider} from \"@material-ui/styles\"\nimport HomePage from \"../Pages/HomePage\"\nimport Context from \"../../context\"\nimport NavDrawer from \"../NavDrawer\"\nimport Header from \"../Header\"\nimport BotSettingsPage from \"../Pages/BotSettingsPage\"\nimport CommandSettingsPage from \"../Pages/CommandSettingsPage\"\nimport KeyboardSettingsPage from \"../Pages/KeyboardSettingsPage\"\nimport StatisticsPage from \"../Pages/StatisticsPage\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport LoginPage from \"../Pages/LoginPage\"\n\nconst customTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#304ffe',\n            light: '#7b7cff',\n            dark: '#0026ca'\n        },\n        secondary: {\n            main: '#1de9b6',\n            light: '#1de9b6',\n            dark: '#00b686'\n        },\n        background: {\n            light: '#f1f3f4'\n        }\n    },\n    typography: {\n        fontFamily: [\n            'Roboto',\n            'Helvetica',\n            'Arial',\n            'sans-serif',\n        ].join(','),\n    },\n})\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        paddingTop: theme.spacing(4),\n    }\n}))\n\nfunction AppLayout({children}) {\n    const classes = useStyles()\n\n    const [isOpenDrawer, setIsOpenDrawer] = useState(false)\n\n    const toggleDrawer = () => {\n        setIsOpenDrawer(!isOpenDrawer)\n    }\n\n    return (\n        <div>\n            <Context.Provider value={{toggleDrawer}}>\n                <div>\n                    <Header/>\n                    <Toolbar/>\n\n                    <NavDrawer open={isOpenDrawer}/>\n\n                    <Container maxWidth=\"md\" className={classes.content}>\n                        {children}\n                    </Container>\n                </div>\n            </Context.Provider>\n        </div>\n    )\n}\n\nfunction DefaultLayout({children}) {\n    const classes = useStyles()\n\n    return (\n        <div>\n            <Container maxWidth=\"md\" className={classes.content}>\n                {children}\n            </Container>\n        </div>\n    )\n}\n\nexport default function App() {\n\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\n\n    return (\n        <ThemeProvider theme={responsiveFontSizes(customTheme)}>\n            <BrowserRouter>\n                <Switch>\n                    <Route path='/app' render={({match: {path}}) => (\n                        isAuthenticated ?\n                            <AppLayout>\n                                <Switch>\n                                    <Route path={`${path}/bot_settings`} exact component={BotSettingsPage}/>\n                                    <Route path={`${path}/command_settings`} exact component={CommandSettingsPage}/>\n                                    <Route path={`${path}/keyboard_settings`} exact component={KeyboardSettingsPage}/>\n                                    <Route path={`${path}/statistics`} exact component={StatisticsPage}/>\n                                    <Redirect from={`${path}/*`} to='/'/>\n                                </Switch>\n                            </AppLayout>\n                            :\n                            <Redirect to='/'/>\n                    )}/>\n\n                    <Route exact>\n                        <DefaultLayout>\n                            <Switch>\n                                <Route path='/' exact component={HomePage}/>\n                                <Route path='/login' exact component={LoginPage}/>\n                                <Redirect from='/*' to='/'/>\n                            </Switch>\n                        </DefaultLayout>\n                    </Route>\n\n                    <Redirect from='*' to='/'/>\n                </Switch>\n            </BrowserRouter>\n        </ThemeProvider>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport commands from '../slices/commandsSlice'\nimport auth from '../slices/authSlice'\n\nconst reducers = combineReducers({commands, auth})\n\nexport default createStore(reducers, applyMiddleware(thunk))\n\n// https://github.com/zalmoxisus/redux-devtools-extension\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n// export default createStore(reducers, composeEnhancers(applyMiddleware(thunk)))","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Components/App'\nimport * as serviceWorker from './serviceWorker'\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}